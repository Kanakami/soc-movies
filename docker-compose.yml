services:
  elasticsearch:
    container_name: es_soc_movies
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    healthcheck:
      test: curl -s http://localhost:9200 >/dev/null || exit 1
      interval: 1s
      timeout: 10s
      retries: 120
    volumes:
      - './tmp/volumes/es:/usr/share/elasticsearch/data'

  postgres:
    image: postgres:16.4
    container_name: postgres_soc_movies
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=soc_movies_db
      - POSTGRES_PASSWORD=soc_movies
      - POSTGRES_USER=justin
    ports:
      - '5432:5432'
    volumes:
      - './tmp/volumes/postgres:/var/lib/postgresql/data'
      - './src/test/resources/init.sql:/docker-entrypoint-initdb.d/init.sql'


  index_creator:
    container_name: es_index_creator
    image: alpine/curl:8.2.1
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: no
    command:
    - /bin/sh
    - -c
    - |
      curl -s -o /dev/null --fail-with-body -XGET elasticsearch:9200/_cat/indices/movies \
      || curl -s -X PUT "http://elasticsearch:9200/movies" -H "Content-Type: application/json" -d'
        {
          "settings": {"number_of_shards": 1, "number_of_replicas": 0},
          "mappings": {
            "properties": {
              "name": { "type": "text" },
              "description": { "type": "text" },
              "tags" : { "type": "keyword" },
              "rating" : { "type": "double" },
              "language" : { "type": "keyword" }, 
              "released" : { "type": "date", "format": "strict_date_optional_time" }
            }
          }
        }'

